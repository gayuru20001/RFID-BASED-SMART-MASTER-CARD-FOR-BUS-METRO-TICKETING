#include <LiquidCrystal.h>
#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 53
#define RST_PIN 9

const int rs = 30, en = 32, d4 = 34, d5 = 36, d6 = 38, d7 = 40;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

const int buzzer = 22;
int bus_sheets = 50;
int current_price = 0;

int passengerNo = 0;

MFRC522 rfid(SS_PIN, RST_PIN); // Instance of the RFID class

MFRC522::MIFARE_Key key;

// Init array that will store new NUID
byte nuidPICC[4];

int remainingAmount[] = {500,1000};
bool isInBus[] = {0,0};

void setup() {
  lcd.begin(16, 2);
  SPI.begin(); // Init SPI bus
  lcd.print("  Bus System");
  lcd.setCursor(0,1);
  lcd.print("Initializing.");
  delay(1000);
  
  pinMode(buzzer,OUTPUT);
  Serial.begin(9600);
  rfid.PCD_Init(); // Init MFRC522
  
  for (byte i = 0; i < 6; i++) {
    key.keyByte[i] = 0xFF;
  }
  
  Serial.println(F("This code scan the MIFARE Classsic NUID."));
  Serial.print(F("Using the following key:"));
  printHex(key.keyByte, MFRC522::MF_KEY_SIZE);
  
  lcd.clear();
  lcd.print("  Bus System");
  lcd.setCursor(0,1);
  
  for(int i=0;i<16;i++){
    lcd.print('.');
    digitalWrite(buzzer,HIGH);
    delay(20);
    digitalWrite(buzzer,LOW);
    delay(40);
  }
  
  lcd.clear();
  lcd.print("  Bus System");
  lcd.setCursor(0,1);
  lcd.print("Seats Rem : ");
  lcd.print(bus_sheets);
}

void loop() {
  // Reset the loop if no new card present on the sensor/reader. This saves the entire process when idle.
  if ( ! rfid.PICC_IsNewCardPresent()) {
    return;
  }
  
  // Verify if the NUID has been read
  if ( ! rfid.PICC_ReadCardSerial()) {
    return;
  }
  
  Serial.print(F("PICC type: "));
  MFRC522::PICC_Type piccType = rfid.PICC_GetType(rfid.uid.sak);
  Serial.println(rfid.PICC_GetTypeName(piccType));
  
  // Check the PICC of Classic MIFARE type
  if (piccType != MFRC522::PICC_TYPE_MIFARE_MINI && piccType != MFRC522::PICC_TYPE_MIFARE_1K && piccType != MFRC522::PICC_TYPE_MIFARE_4K) {
    Serial.println(F("Your tag is not of type MIFARE Classic."));
    return;
  }
  
  checkRFID();
}
